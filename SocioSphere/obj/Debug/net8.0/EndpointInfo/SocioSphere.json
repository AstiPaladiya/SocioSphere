{
  "openapi": "3.0.1",
  "info": {
    "title": "SocioSphere",
    "version": "1.0"
  },
  "paths": {
    "/api/Admin/AdminRegister": {
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAdminData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAdminData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddAdminData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/AdminDashboard/dashboard": {
      "get": {
        "tags": [
          "AdminDashboard"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Agency": {
      "post": {
        "tags": [
          "Agency"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAgencyData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAgencyData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddAgencyData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Agency"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Agency/{id}": {
      "put": {
        "tags": [
          "Agency"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAgencyData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAgencyData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAgencyData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Agency"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Agency/toggleStatus/{id}": {
      "put": {
        "tags": [
          "Agency"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/AgencyContact": {
      "get": {
        "tags": [
          "AgencyContact"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "AgencyContact"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAgencyContactData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAgencyContactData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddAgencyContactData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/AgencyContact/{id}": {
      "get": {
        "tags": [
          "AgencyContact"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/AgencyContact/updateAgencyContact/{id}": {
      "put": {
        "tags": [
          "AgencyContact"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAgencyContactData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAgencyContactData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAgencyContactData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/AgencyContact/getActiveAgencyType": {
      "get": {
        "tags": [
          "AgencyContact"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Agenda": {
      "get": {
        "tags": [
          "Agenda"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Agenda/addAgendaMember": {
      "post": {
        "tags": [
          "Agenda"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAgendaData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAgendaData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddAgendaData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/CommitteMember": {
      "get": {
        "tags": [
          "CommitteMember"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "CommitteMember"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCommitteMemberData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCommitteMemberData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddCommitteMemberData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/CommitteMember/{id}": {
      "get": {
        "tags": [
          "CommitteMember"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "CommitteMember"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommitteMemberData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommitteMemberData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommitteMemberData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/CommitteMember/committeType": {
      "get": {
        "tags": [
          "CommitteMember"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/CommitteMember/toggleStatus/{id}": {
      "put": {
        "tags": [
          "CommitteMember"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommitteMemberData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommitteMemberData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommitteMemberData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Complaintype": {
      "get": {
        "tags": [
          "Complaintype"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Complaintype"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddComplainTypeData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddComplainTypeData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddComplainTypeData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Complaintype/ComplainTypeById/{id}": {
      "get": {
        "tags": [
          "Complaintype"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Complaintype/{id}": {
      "put": {
        "tags": [
          "Complaintype"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateComplainTypeData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateComplainTypeData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateComplainTypeData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Complaintype/toggleStatus/{id}": {
      "put": {
        "tags": [
          "Complaintype"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Expenses": {
      "get": {
        "tags": [
          "Expenses"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Expenses"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddExpensesData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddExpensesData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddExpensesData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Expenses/{id}": {
      "get": {
        "tags": [
          "Expenses"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Expenses"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExpensesData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExpensesData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExpensesData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Expenses/toggleStatus/{id}": {
      "put": {
        "tags": [
          "Expenses"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpensesRecord": {
      "get": {
        "tags": [
          "ExpensesRecord"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "ExpensesRecord"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddExpensesRecorddata"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddExpensesRecorddata"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddExpensesRecorddata"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "ExpensesRecord"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpensesRecord/updateExpensesRecord/{id}": {
      "put": {
        "tags": [
          "ExpensesRecord"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExpensesRecordData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExpensesRecordData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExpensesRecordData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpensesRecord/{id}": {
      "get": {
        "tags": [
          "ExpensesRecord"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpensesRecord/togglestatus/{id}": {
      "put": {
        "tags": [
          "ExpensesRecord"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpensesRecord/getActiveExpensesType": {
      "get": {
        "tags": [
          "ExpensesRecord"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Login/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCredential"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCredential"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCredential"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Member/MemberRegister": {
      "post": {
        "tags": [
          "Member"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMemberData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMemberData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddMemberData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Member/toggleStatus/{id}": {
      "put": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Member/GetAllMembers": {
      "get": {
        "tags": [
          "Member"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Member/{id}": {
      "get": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MemberDashboard/dashboard": {
      "get": {
        "tags": [
          "MemberDashboard"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SocietyCommitte": {
      "get": {
        "tags": [
          "SocietyCommitte"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "SocietyCommitte"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCommitteData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCommitteData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddCommitteData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SocietyCommitte/{id}": {
      "get": {
        "tags": [
          "SocietyCommitte"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SocietyCommitte/updateSocietyCommitte/{id}": {
      "put": {
        "tags": [
          "SocietyCommitte"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommitteData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommitteData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommitteData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SocietyCommitte/toggleStatus/{id}": {
      "put": {
        "tags": [
          "SocietyCommitte"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SocietyMeeting": {
      "get": {
        "tags": [
          "SocietyMeeting"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "SocietyMeeting"
        ],
        "parameters": [
          {
            "name": "MeetingName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notice",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Time",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "time"
            }
          },
          {
            "name": "Location",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UpdatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Photo": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SocietyMeeting/{id}": {
      "get": {
        "tags": [
          "SocietyMeeting"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SocietyMeeting/updateMeeting/{id}": {
      "put": {
        "tags": [
          "SocietyMeeting"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MeetingName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notice",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Time",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "time"
            }
          },
          {
            "name": "Location",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "UpdatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Photo": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SocietyMeeting/toggleStatus/{id}": {
      "put": {
        "tags": [
          "SocietyMeeting"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Visiter": {
      "get": {
        "tags": [
          "Visiter"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Visiter"
        ],
        "parameters": [
          {
            "name": "VisitingUserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "WatchmenId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "EntryDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EntryTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "time"
            }
          },
          {
            "name": "ExitDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "ExitTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "time"
            }
          },
          {
            "name": "CreatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UpdatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Photo": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Visiter/getAllVisiterByWatchmen": {
      "get": {
        "tags": [
          "Visiter"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Visiter/getAllVisiterByMember": {
      "get": {
        "tags": [
          "Visiter"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Visiter/getVisiterById/{id}": {
      "get": {
        "tags": [
          "Visiter"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Visiter/updateVisiter/{id}": {
      "put": {
        "tags": [
          "Visiter"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "VisitingUserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "EntryDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EntryTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "time"
            }
          },
          {
            "name": "ExitDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "ExitTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "time"
            }
          },
          {
            "name": "UpdatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Photo": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Visiter/getAllMemebrForVisiter": {
      "get": {
        "tags": [
          "Visiter"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Visiter/deleteVisiter/{id}": {
      "delete": {
        "tags": [
          "Visiter"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Watchmen/watchmenRegister": {
      "post": {
        "tags": [
          "Watchmen"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWatchmenData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWatchmenData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddWatchmenData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Watchmen/GetAllWatchmen": {
      "get": {
        "tags": [
          "Watchmen"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Watchmen/toggleStatus/{id}": {
      "get": {
        "tags": [
          "Watchmen"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/WatchmenDashboard/dashboard": {
      "get": {
        "tags": [
          "WatchmenDashboard"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddAdminData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "groupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNo": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddAgencyContactData": {
        "type": "object",
        "properties": {
          "agencyTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contactPersonName": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "emailId": {
            "type": "string",
            "nullable": true
          },
          "contactNo": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "alternateContactNo": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddAgencyData": {
        "type": "object",
        "properties": {
          "agencyTypeName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddAgendaData": {
        "type": "object",
        "properties": {
          "societyMeetingId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userAgendaId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agendaDescription": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddCommitteData": {
        "type": "object",
        "properties": {
          "committeName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddCommitteMemberData": {
        "type": "object",
        "properties": {
          "committieTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddComplainTypeData": {
        "type": "object",
        "properties": {
          "complainName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddExpensesData": {
        "type": "object",
        "properties": {
          "expensesName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddExpensesRecorddata": {
        "type": "object",
        "properties": {
          "expensesTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expensesTitle": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "expensesDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddMemberData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "groupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNo": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "squarfootSize": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "livingDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "flatNo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddWatchmenData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "groupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNo": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftStartTime": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "shiftEndTime": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "workExperience": {
            "type": "string",
            "nullable": true
          },
          "joiningDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "salary": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginCredential": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyContactData": {
        "type": "object",
        "properties": {
          "agencyTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contactPersonName": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "emailId": {
            "type": "string",
            "nullable": true
          },
          "contactNo": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "alternateContactNo": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyData": {
        "type": "object",
        "properties": {
          "agencyTypeName": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCommitteData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "committeName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCommitteMemberData": {
        "type": "object",
        "properties": {
          "committieTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateComplainTypeData": {
        "type": "object",
        "properties": {
          "complainName": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateExpensesData": {
        "type": "object",
        "properties": {
          "expensesName": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateExpensesRecordData": {
        "type": "object",
        "properties": {
          "expensesTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expensesTitle": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "expensesDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}